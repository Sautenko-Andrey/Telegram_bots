import telebot
from telebot import types
from tokens import beer_bot_token as my_token

from beerRNN_executor import ExecutorRNN

from matplotlib import pyplot as plt
from matplotlib.ticker import MaxNLocator, FixedLocator, FormatStrFormatter

bot = telebot.TeleBot(my_token.token)


@bot.message_handler(commands=["start", "hello", "hey", "–ø—Ä–∏–≤–µ—Ç"])
def start_Bot(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""

    # –ø—Ä–æ–ø–∏—à–µ–º –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞
    markup = types.InlineKeyboardMarkup(row_width=2)
    search_by_text_btn = types.InlineKeyboardButton("–ü–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–æ—é", callback_data="search_by_text")
    search_by_img_btn = types.InlineKeyboardButton("–ü–æ—à—É—Ç –ø–æ —Ñ–æ—Ç–æ", callback_data="search_by_img")
    markup.add(search_by_text_btn, search_by_img_btn)

    # –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–ª–æ–∂–∏–º –≤—ã–±—Ä–∞—Ç—å —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞ –ø–∏–≤–∞
    bot.send_message(message.chat.id, f"–†–∞–¥ —Ç–µ–±–µ –±–∞—á–∏—Ç–∏, {message.from_user.first_name} üòÅ\n"
                                      f"–û–±–µ—Ä–∏ –Ω–∏–∂—á–µ —Å–ø–æ—Å–æ–± –ø–æ—à—É–∫—É –ø–∏–≤–∞ (–∑–∞ –Ω–∞–∑–≤–æ—é –∞–±–æ –ø–æ —Ñ–æ—Ç–æ)",
                     reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def request_executor(call):

    #–ø–æ–ª—É—á–∞–µ–º —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞ –ø–∏–≤–∞
    mode = call.data

    respond = "–ø–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–æ—é –ø–∏–≤–∞" if mode == "search_by_text" else "–ø–æ—à—É–∫ –ø–∏–≤–∞ –ø–æ —Ñ–æ—Ç–æ"

    #–æ—Ç–ø—Ä–∞–≤–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(call.message.chat.id, f"–¢–∏ –æ–±—Ä–∞–≤ {respond} üëç")

    #–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞, –ø—Ä–¥–ª–∞–≥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
    if mode == "search_by_text":
        bot.send_message(call.message.chat.id, "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤—É –ø–∏–≤–∞")
        bot.register_next_step_handler(call.message, rnn_executor)
    else:
        bot.send_message(call.message.chat.id, "–ó–∞–≤–∞–Ω—Ç–∞–∂ —Ñ–æ—Ç–æ –ø–∏–≤–∞")
        bot.register_next_step_handler(call.message, cnn_executor)


def open_send_img(message, path):
    """–ú–µ—Ç–æ–¥ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""

    with open(path, "rb") as file:
        bot.send_photo(message.chat.id, file)


def rnn_executor(message):
    """–†–µ–∫—É—Ä–µ–Ω—Ç–Ω–∞—è –ù–° –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞"""

    #–ø–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–∏–≤–æ

    user_beer_request = message.text.strip()

    bot.send_message(message.chat.id, f"–ó–∞–ø–∏—Ç –Ω–∞ –ø–æ—à—É–∫ üìç{user_beer_request}üìç –ø—Ä–∏–π–Ω—è—Ç. –ü–æ—á–∏–Ω–∞—î–º–æ –ø–æ—à—É–∫!")

    #–ø–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –æ—Ç –ù–° (–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏–≤–∞)
    prediction = ExecutorRNN()
    pred_result, pred_img ,pred_all_prices = prediction.identify_item(user_beer_request)

    #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    bot.send_message(message.chat.id, f"–ú–∏ –∑–Ω–∞–π—à–ª–∏ —Ç–≤–æ—î –ø–∏–≤–æ!\n"
                                      f"–¶–µ : {pred_result}")

    #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –µ–≥–æ –ø–∏–≤–æ–º
    #open_send_img(message,GetBeerData(result).send_data())
    open_send_img(message, pred_img)

    #–µ—Å–ª–∏ —Ü–µ–Ω–∞ 0, —É–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –ø–∏–≤–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏ –≤ –º–∞—Ä–∫–µ—Ç–µ
    #pred_all_prices = {key:'–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏' for key, value in pred_all_prices.items if value == 0}

    # #–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ 0 –Ω–∞ "–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
    for key, value in pred_all_prices.items():
        if value == 0:
            value = "–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"

    #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å–µ —Ü–µ–Ω—ã
    bot.send_message(message.chat.id, f"–¶–µ–Ω—ã –≤ —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–∞—Ö:\n"
                                      f"---------------------\n"
                                      f"–ê–¢–ë: {pred_all_prices['atb']} –≥—Ä–Ω\n"
                                      f"–ï–ö–û: {pred_all_prices['eko']} –≥—Ä–Ω\n"
                                      f"Varus: {pred_all_prices['varus']} –≥—Ä–Ω\n"
                                      f"–°—ñ–ª—å–ø–æ: {pred_all_prices['silpo']} –≥—Ä–Ω\n"
                                      f"–ê—à–∞–Ω: {pred_all_prices['ashan']} –≥—Ä–Ω\n"
                                      f"Novus: {pred_all_prices['novus']} –≥—Ä–Ω\n"
                                      f"Metro: {pred_all_prices['metro']} –≥—Ä–Ω\n"
                                      f"–ù–∞—à –ö—Ä–∞–π: {pred_all_prices['nk']} –≥—Ä–Ω\n"
                                      f"Fozzy: {pred_all_prices['fozzy']} –≥—Ä–Ω")

    #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—É—é –¥–∏–∞–≥—Ä–∞–º–º—É –ø–æ —Ü–µ–Ω–∞–º –Ω–∞ –ø–∏–≤–æ
    markets = ["–ê–¢–ë", "–ï–ö–û", "Varus", "–°—ñ–ª—å–ø–æ", "–ê—à–∞–Ω", "Novus", "Metro", "–ù–ö", "Fozzy"]
    prices = [x for x in pred_all_prices.values()]
    #prices = pred_all_prices

    market_colors = ['blue', 'orange', 'green',
                     'red', 'purple', 'brown',
                     'pink', 'grey', 'olive']

    # create plot
    fig = plt.figure(figsize=(7, 4))
    ax = fig.add_subplot()
    ax.bar(markets, (prices), color=market_colors)
    ax.yaxis.set_major_locator(MaxNLocator(10))
    ax.yaxis.set_major_formatter(FormatStrFormatter("%.2f"))
    plt.title("–¶—ñ–Ω–∏ —É –º–∞—Ä–∫–µ—Ç–∞—Ö, –≥—Ä–Ω")
    counter = 0
    plt.savefig(f'compared_prices_{message.from_user.first_name}_{counter}.png')
    open_send_img(message, f'compared_prices_{message.from_user.first_name}_{counter}.png')
    counter +=1





def cnn_executor(message):
    """–°–≤–µ—Ä—Ç–æ—á–Ω–∞—è –ù–° –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ"""

    bot.send_message(message.chat.id, f"{message.from_user.first_name},–≤–∏–±–∞—á, –Ω–∞–∂–∞–ª—å –ø–æ—à—É–∫ –ø–æ —Ñ–æ—Ç–æ"
                                      f"—Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π.")


@bot.message_handler(content_types=["text", "audio", "video"])
def get_another(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –≤–≤–æ–¥–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    bot.send_message(message.chat.id, "–Ø –Ω–µ —Ä–æ–∑—É–º—ñ—é —â–æ —Ç–∏ —Ö–æ—á–µ—à—å –≤—ñ–¥ –º–µ–Ω–µ üòÑ")
    bot.register_next_step_handler(message, start_Bot)



bot.polling(none_stop=True)
