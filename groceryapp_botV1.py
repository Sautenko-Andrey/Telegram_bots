import telebot
from telebot import types
from tokens import grocery_appV1 as my_token
import time

bot = telebot.TeleBot(my_token.token)


@bot.message_handler(commands=["start"])
def start(message):
    """–ú–µ—Ç–æ–¥, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –∫–æ–º–∞–Ω–¥—É /start"""

    # –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
    bot.send_message(message.chat.id, f"–í—ñ—Ç–∞—é, {message.from_user.first_name}üëã\n"
                                      f"–ë—É–¥—å –ª–∞—Å–∫–∞ –≤–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –ø—Ä–æ–¥—É–∫—Ç–∞üõí")

    bot.register_next_step_handler(message, get_item_name)


def rnn_searcher(message, item_name:str) -> str:
    """–ú–µ—Ç–æ–¥ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(—Ç–æ–≤–∞—Ä–∞)
    –ø—Ä–∏ –ø–æ–º–æ—â–∏ –ù–°."""

    bot.send_message(message.chat.id, "–®—É–∫–∞—é –ø—Ä–æ–¥—É–∫—Ç...üëÄ")
    time.sleep(1)
    bot.send_message(message.chat.id, "–¢—Ä–æ—à–∫–∏ –ø–æ—á–µ–∫–∞–π—Ç–µ üôè")
    time.sleep(2)
    return item_name



def get_item_name(message) -> str:
    """–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Å—á–∏—Ç—ã–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –∏—Å–∫–∞—Ç—å –µ–≥–æ –≤ –ë–î"""

    #–ø–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    item = message.text.strip().lower()

    #–∏–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –∏—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    item = rnn_searcher(message,item)

    #–ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –∑–∞–ø—Ä–æ—Å
    bot.send_message(message.chat.id, f'–í–∏ —à—É–∫–∞—î—Ç–µ "{item}"')

    #—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏ –≤—ã–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞
    bot.send_message(message.chat.id, f"–ë—É–¥—å –ª–∞—Å–∫–∞ –≤–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ, –¥–µ –±—É–¥–µ–º–æ —à—É–∫–∞—Ç–∏üõí")
    bot.register_next_step_handler(message, get_city)

    return item

def get_city(message) -> str:
    """–°—á–∏—Ç—ã–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    city = message.text.strip().lower()

    # –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –≥–æ—Ä–æ–¥
    bot.send_message(message.chat.id, f'–í–∏ —É –º—ñ—Å—Ç—ñ {city[0].upper() + city[1:]}')


    # —Å–æ–∑–¥–∞–¥–∏–º –Ω–∞–±–æ—Ä –∫–Ω–æ–ø–æ–∫
    markup = types.InlineKeyboardMarkup(row_width=3)  # –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É –±—É–¥–µ–º –º–∞–∫—Å–∏–º—É–º 2 –∫–Ω–æ–ø–∫–∏
    atb = types.InlineKeyboardButton("–ê–¢–ë", callback_data="ATB")
    eko = types.InlineKeyboardButton("–ï–ö–û", callback_data="EKO")
    varus = types.InlineKeyboardButton("Varus", callback_data="Varus")
    silpo = types.InlineKeyboardButton("–°—ñ–ª—å–ø–æ", callback_data="Silpo")
    ashan = types.InlineKeyboardButton("–ê—à–∞–Ω", callback_data="Ashan")
    novus = types.InlineKeyboardButton("Novus", callback_data="Novus")
    metro = types.InlineKeyboardButton("Metro", callback_data="Metro")
    nk = types.InlineKeyboardButton("–ù–∞—à –ö—Ä–∞–π", callback_data="NK")
    fozzy = types.InlineKeyboardButton("Fozzy", callback_data="Fozzy")
    markup.add(atb, eko, varus, silpo, ashan, novus, metro, nk, fozzy)

    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –º–∞—Ä–∫–µ—Ç", reply_markup=markup)

    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏ –≤—ã–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–∞—Ä–∫–µ—Ç–æ–≤
    #bot.register_next_step_handler(message, get_markets)

    return city

@bot.callback_query_handler(func=lambda call: True)
def callback(call):

    market = call.data
    bot.send_message(call.message.chat.id, f"–¢–∏ –æ–±—Ä–∞–≤ {market}")




bot.polling(none_stop=True)
