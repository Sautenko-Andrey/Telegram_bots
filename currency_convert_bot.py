import telebot
from telebot import types
from tokens import currency_convert_bot_token as token

bot = telebot.TeleBot(token.token)
from currency_converter import CurrencyConverter
currency = CurrencyConverter()

money = 0  #–ø–ª–æ—Ö–∞—è –∏–¥–µ—è!

@bot.message_handler(commands=["start"])
def start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""

    #–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}!\n"
                                      f"–í–≤–µ–¥–∏ —Å—É–º–º—É ‚Ü©Ô∏è")

    bot.register_next_step_handler(message, executor)

def executor(message):
    """–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–¥–µ—Ç –Ω–µ–∫—É—é —Å—É–º–º—É."""

    #—Å—É–º–º–∞ –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    global money
    try:
        money = float(message.text.strip())
    except ValueError:
        bot.send_message(message.chat.id, "–°—É–º–º—É –ø—Ä–æ–ø–∏—Å—É–π—Ç–µ —á–∏—Å–ª–∞–º–∏ üî¢")
        bot.register_next_step_handler(message, executor)
        return  #—á—Ç–æ–±—ã –ø–æ—Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è

    if money < 0:
        bot.send_message(message.chat.id, "–°—É–º–º–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –±—ñ–ª—å—à–µ –Ω—É–ª—è!\n–í–ø–∏—à—ñ—Ç—å —Å—É–º–º—É")
        bot.register_next_step_handler(message, executor)
        return  # —á—Ç–æ–±—ã –ø–æ—Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è


    #—Å–æ–∑–¥–∞–¥–∏–º –Ω–∞–±–æ—Ä –∫–Ω–æ–ø–æ–∫
    markup = types.InlineKeyboardMarkup(row_width=2) #–≤ –æ–¥–Ω–æ–º —Ä—è–¥—É –±—É–¥–µ–º –º–∞–∫—Å–∏–º—É–º 2 –∫–Ω–æ–ø–∫–∏
    btn1 = types.InlineKeyboardButton("USD/EUR", callback_data="USD/EUR")
    btn2 = types.InlineKeyboardButton("EUR/USD", callback_data="EUR/USD")
    btn3 = types.InlineKeyboardButton("TRY/USD", callback_data="TRY/USD")
    btn4 = types.InlineKeyboardButton("–Ü–Ω—à–µ", callback_data="else")
    markup.add(btn1, btn2, btn3, btn4)

    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –ø–∞—Ä—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ñ", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback(call):

    if call.data == "else":
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä—É —á–µ—Ä–µ–∑ —Å–ª–µ—à /")
        bot.register_next_step_handler(call.message, custom_currency)

    #–ø–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞—Ä—É –∏ —Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫ –ø—Ä–∏–º–µ—Ä—É['USD','UAH']
    values = call.data.split('/')

    #–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –≤–∞–ª—é—Ç
    result = currency.convert(money, values[0], values[1])

    #–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(call.message.chat.id, f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {round(result,2)} {values[1]}\n–ü—Ä–æ–¥–æ–≤–∂—É–º–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—é?\n"
                                           f"–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É —Å—É–º–º—É")
    bot.register_next_step_handler(call.message, executor)

def custom_currency(message):

    try:
        #–ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        values = message.text.upper().split('/')
        # –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –≤–∞–ª—é—Ç
        result = currency.convert(money, values[0], values[1])

        # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(message.chat.id, f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {round(result, 2)} {values[1]}\n–ü—Ä–æ–¥–æ–≤–∂—É–º–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—é?\n"
                                               f"–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É —Å—É–º–º—É")
        bot.register_next_step_handler(message, executor)
    except Exception:
        # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è —Ö–æ—Ç—å –∫–∞–∫–æ–π-–ª–∏–±–æ –æ—à–∏–±–∫–∏
        bot.send_message(message.chat.id, f"{message.from_user.first_name}, —Ç–∏ –Ω–∞–¥–∞–≤ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω–Ω—ñ...üòî\n"
                                          f"–°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ üòä")
        bot.register_next_step_handler(message, custom_currency)



bot.polling(none_stop=True)